#N canvas 24 45 1440 817 12;
#X declare -lib Gem;
#X declare -path else;
#X obj 32 -215 declare -lib Gem;
#X msg 322 -206 create;
#X obj 322 -166 gemwin;
#X msg 384 -206 1;
#X msg 420 -206 0;
#X obj 132 834 pix_multiimage;
#X floatatom 372 773 5 0 0 0 - - - 0;
#X obj 132 862 pix_texture;
#X obj 1180 -165 netreceive -u -b;
#X obj 1180 -124 oscparse;
#X obj 1180 -85 list trim;
#X obj 677 109 route respiration;
#X obj 1180 -242 loadbang;
#X obj 867 112 route heart;
#X obj 1019 115 route skin;
#X obj 867 161 s heart;
#X obj 677 161 s respiration;
#X obj 1019 165 s skin;
#X obj 895 -239 loadbang;
#X obj 32 -243 declare -path else;
#X floatatom 1203 307 6 0 0 0 - - - 0;
#X floatatom 1334 309 7 0 0 0 - - - 0;
#X floatatom 1452 307 7 0 0 0 - - - 0;
#X floatatom 1568 308 5 0 0 0 - - - 0;
#X obj 1203 333 s delta;
#X obj 1334 334 s theta;
#X obj 1452 332 s alpha;
#X obj 1568 333 s beta;
#X msg 1180 -210 listen 12345;
#X obj 1163 159 list split 3;
#X obj 1203 281 list split 1;
#X obj 1334 282 list split 1;
#X obj 1452 282 list split 1;
#X obj 1568 282 list split 1;
#X floatatom 1679 306 5 0 0 0 - - - 0;
#X obj 1679 281 list split 1;
#X obj 1679 330 s gamma;
#X obj 34 324 t b f;
#X obj 34 357 expr if ($f2 >= 5 \, 1 \, 0);
#X text 846 188 send heart;
#X text 999 190 send skin;
#X text 1163 119 From here on down \, these are the brain waves;
#X text 683 85 Route = checks for argument and fetches corresponding data;
#X text 1334 252 Nothing is currently receiving theta \, alpha \, beta or gamma waves., f 65;
#X text 1910 -151 What is the blink? Is this referring to eyes blinking with the EEG? or is it a specific function?;
#X text 1910 -211 OSC is stable and is really good at maintaining mapping. JJM found that binary would drop some data and not be able to parse correctly.Open BCI outputs OSC.;
#X text 1260 151 Open BCI ouputs 1 OSC packet of 3 lists of the five brainwaves at a time. list split divides packet into the three lists of 5 bands., f 74;
#X text 375 615 * in the open images message refers to a variable in the file name., f 68;
#X text 1915 -94 ** Modifications to make;
#X text 1915 -73 ** Draw from two libraries. planets and bodies;
#X text 1915 -53 ** trigger images randomly from each library;
#X text 1916 -29 ** change sphere to flat image plane;
#X text 1918 12 ** respiration: opacity of image - never goes below 50%;
#X text 1921 70 ** Blink: selects planet images;
#X text 1923 33 ** skin selects body images (but not one image per beat maybe 1 per 12 or something.;
#X text 1916 -7 ** heart: Red of planet and Green of Body;
#X obj 372 722 random 5;
#X obj 372 748 int;
#X text 85 323 trigger bang float float value is the raw Delta wave amplitude, f 63;
#X obj 34 296 r delta;
#X floatatom 677 135 5 0 0 0 - - - 0;
#X floatatom 867 137 5 0 0 0 - - - 0;
#X floatatom 1019 141 5 0 0 0 - - - 0;
#X obj 34 388 select 1;
#X text 102 388 send bang on outlet 1 if the value is 1;
#X obj 34 441 s blink_bang;
#X obj 372 696 r blink_bang;
#X obj 1263 787 pix_multiimage;
#X obj 1517 676 r skin;
#X obj 1517 729 int;
#X floatatom 1517 754 5 0 0 0 - - - 0;
#X obj 1263 818 pix_texture;
#X msg 896 -212 1;
#X msg 942 -212 0;
#X obj 136 583 loadbang;
#X obj 1264 582 loadbang;
#X obj 322 -244 loadbang;
#X obj 1180 -51 s osc_data;
#X obj 521 50 r osc_data;
#X text 611 186 s = send (respiration);
#X text 1911 -281 This Patch takes the OSC packets and converts them into PD messages. OSC is sound control... why are the sensors sending data in OSC instead of binary? Wouldn't binary slip packets have less latency and be more reactive in real time?;
#X text 27 0 ############################################################################################### PARSE SENSORS ############################################################################################################################################, f 250;
#X text 12 -330 ################################################################################################## S E T U P ################################################################################################################################################, f 253;
#X text 12 -340 *************************************************************************************************************************************************************************************************************************************************************, f 253;
#X text 26 492 ############################################################################################## IMAGE SELECTION ###############################################################################################################################################, f 254;
#X text 28 121 + Any time you see multiplication of signals think about scalers, f 50;
#X text 28 163 + respiration affects skin.;
#X text 27 481 **************************************************************************************************************************************************************************************************************************************************************, f 254;
#X text 32 956 **************************************************************************************************************************************************************************************************************************************************************, f 254;
#X text 379 -165 the window where images appear;
#X text 1249 -124 takes the OSC list and outputs a pd message list;
#X text 1256 -86 split the message list into individual messages.;
#X text 1178 -279 %%%%%%%%%%%%%%%%%%%%%%%%%%%% OSC SETUP %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%, f 76;
#X text 1906 -325 %%%%%%%%%%%%%%%%%%%%%%%% MISC COMMENTS %%%%%%%%%%%%%%%%%%%%%%%%%%, f 68;
#X text 34 -193 -else and Gem are pd libraries, f 17;
#X text 26 -280 %%%%%% LIBRARIES SETUP %%%%%%;
#X text 27 -10 **********************************************************************************************************************************************************************************************************************************************************, f 250;
#X text 31 967 ############################################################################################ IMAGE MIXING & EFFECTS ##########################################################################################################################################, f 254;
#X text 15 -358 @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @, f 253;
#X text 356 596 [open] message connects to a single library of jpg images.;
#X text 243 824 Inlet 1 = gemlist \, file \; Inlet 2 = select image from integer;
#X text 370 666 %%%%%%%%%%%%%%%%%%%% BLINK TO PLANET IMAGE MAPPING %%%%%%%%%%%%%%%%%%, f 69;
#X text 1513 649 %%%%%%%%%%%%%% SKIN VALUE TO BODY IMAGE MAPPING %%%%%%%%%%%%%%%%, f 64;
#X text 210 351 if the float value >= 5 then it outputs a 1 (blink detected) \, if the value is < 5 \, then it outputs a 0 (no blink), f 61;
#X obj 1263 848 s body_texture;
#X text 1008 301 float value from OpenBCI (between 0 and 50.0-ish), f 26;
#X text 1282 -219 Listen to port #12345 (this is the default port in the OpenBCI software \, and is used in the Arduino as well), f 55;
#X text 27 80 + used Erin's nonnormative approach on Arduino sensors ++ all values are between 0 and 1 (float), f 54;
#X text 225 861 turn selected image into a texture;
#X msg 1264 610 open ../images/body*.jpg 8;
#X text 40 1711 @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @ ^ @, f 253;
#X text 39 1699 *************************************************************************************************************************************************************************************************************************************************************, f 253;
#X text 437 722 random number between 0 and 4 when a bang is sent to Inlet 1;
#X text 1556 702 map skin value (0.0 - 1.0) to an integer between 0 and 7;
#X text 36 263 %%%%%%%%%%%%%%%%%%%%%%% BLINK DETECTION %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%, f 86;
#X text 670 52 %%%%%%%%%%%%%%%%%%%%%% SENSORS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
#X text 1160 91 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% EEG %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%, f 88;
#X text 560 128 float values between 0 and 1, f 15;
#X text 1139 357 send delta waves;
#X obj 132 891 s planet_texture;
#X obj 1517 703 * 8;
#X obj 34 414 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 199 1144 r planet_texture;
#X msg 136 611 open ../images/planets*.jpg 4;
#X obj 199 1334 colorRGB 1 1 1 1;
#X obj 374 1176 r heart;
#X obj 374 1233 expr 1 - $f2;
#X obj 374 1203 t b f;
#X obj 1132 1177 r heart;
#X obj 1132 1234 expr 1 - $f2;
#X obj 1132 1204 t b f;
#X obj 959 1146 r body_texture;
#X obj 691 -241 loadbang;
#X msg 692 -214 1;
#X msg 738 -214 0;
#X obj 693 -157 s planet_gem;
#X obj 897 -155 s body_gem;
#X obj 149 639 r planet_gem;
#X obj 1276 636 r body_gem;
#X text 474 1208 covert 0-1 to 1-0 \; if the heart value is 1 \, then Blue and Green get set to 0 \, and vice versa., f 49;
#X text 1232 1211 covert 0-1 to 1-0 \; if the heart value is 1 \, then Blue and Red get set to 0 \, and vice versa., f 47;
#X text 131 549 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PLANET IMAGE LIBRARY %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%, f 103;
#X text 1259 548 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% BODY IMAGE LIBRARY %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%, f 100;
#X obj 199 1365 rectangle 4 4;
#X obj 958 1539 rectangle 4 4;
#X obj 1195 1518 + 0.5;
#X obj 1195 1486 * 0.5;
#X obj 1195 1346 r respiration;
#X obj 693 -184 gemhead 10;
#X obj 897 -182 gemhead 20;
#X obj 958 1501 alpha;
#X obj 958 1470 colorRGB 1 1 1 0;
#X text 1244 1485 > (0.0 - 1.0) -> (0.0 - 0.5);
#X text 1246 1517 > (0.0 - 0.5) -> (0.5 - 1.0);
#X text 369 1147 %%%%%%%%%% HEART TO PLANET IMAGE RED %%%%%%%%%%%%%%%%%%%%%%%%%%%, f 64;
#X text 195 1079 %%%%%%%%%%%%%%%%%%%%%%%%%%%% PLANET TEXTURE MAPPINGS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%, f 89;
#X text 1192 1320 %%%%%%%%%%%% RESPIRATION TO IMAGE MIX %%%%%%%%%%%%%%%;
#X text 1129 1144 %%%%%%%%%%% HEART TO BODY IMAGE GREEN %%%%%%%%%%%%%%%%%%%%%%%%, f 62;
#X text 952 1078 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% BODY TEXTURE MAPPINGS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%, f 88;
#X obj 1195 1375 t b f;
#X obj 1195 1404 expr pow($f2 \, 2);
#X text 1319 1396 ** easing function \; pow func turns a linear curve into an exponentional curve which feels more *natural* when controlling values., f 72;
#X text 689 -122 gemlists for the planet and body images gemhead argument determines render order;
#X text 457 -214 1 starts the animation \, 0 stops the animation, f 23;
#X text 314 -282 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% GEM SETUP %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%, f 94;
#X text 1258 1456 !!! optional scaling !!!;
#X text 1308 -173 Receive from local network (-u = udp \, -b = binary) \, outputs a list of osc data, f 51;
#X text 62 414 manual bang for testing;
#X connect 1 0 2 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 7 0;
#X connect 6 0 5 1;
#X connect 7 0 119 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 77 0;
#X connect 11 0 60 0;
#X connect 11 1 13 0;
#X connect 12 0 28 0;
#X connect 13 0 61 0;
#X connect 13 1 14 0;
#X connect 14 0 62 0;
#X connect 14 1 29 0;
#X connect 18 0 72 0;
#X connect 20 0 24 0;
#X connect 21 0 25 0;
#X connect 22 0 26 0;
#X connect 23 0 27 0;
#X connect 28 0 8 0;
#X connect 29 1 30 0;
#X connect 30 0 20 0;
#X connect 30 1 31 0;
#X connect 31 0 21 0;
#X connect 31 1 32 0;
#X connect 32 0 22 0;
#X connect 32 1 33 0;
#X connect 33 0 23 0;
#X connect 33 1 35 0;
#X connect 34 0 36 0;
#X connect 35 0 34 0;
#X connect 37 0 38 0;
#X connect 37 1 38 1;
#X connect 38 0 63 0;
#X connect 56 0 57 0;
#X connect 57 0 6 0;
#X connect 59 0 37 0;
#X connect 60 0 16 0;
#X connect 61 0 15 0;
#X connect 62 0 17 0;
#X connect 63 0 121 0;
#X connect 66 0 56 0;
#X connect 67 0 71 0;
#X connect 68 0 120 0;
#X connect 69 0 70 0;
#X connect 70 0 67 1;
#X connect 71 0 104 0;
#X connect 72 0 149 0;
#X connect 73 0 149 0;
#X connect 74 0 123 0;
#X connect 75 0 109 0;
#X connect 76 0 1 0;
#X connect 76 0 3 0;
#X connect 78 0 11 0;
#X connect 109 0 67 0;
#X connect 120 0 69 0;
#X connect 121 0 65 0;
#X connect 122 0 124 0;
#X connect 123 0 5 0;
#X connect 124 0 143 0;
#X connect 125 0 127 0;
#X connect 126 0 124 2;
#X connect 126 0 124 3;
#X connect 127 0 126 0;
#X connect 127 1 126 1;
#X connect 128 0 130 0;
#X connect 129 0 151 3;
#X connect 129 0 151 1;
#X connect 130 0 129 0;
#X connect 130 1 129 1;
#X connect 131 0 151 0;
#X connect 132 0 133 0;
#X connect 133 0 148 0;
#X connect 134 0 148 0;
#X connect 137 0 5 0;
#X connect 138 0 67 0;
#X connect 146 0 145 0;
#X connect 147 0 159 0;
#X connect 148 0 135 0;
#X connect 149 0 136 0;
#X connect 150 0 144 0;
#X connect 151 0 150 0;
#X connect 159 0 160 0;
#X connect 159 1 160 1;
#X connect 160 0 151 4;
#X connect 160 0 146 0;
